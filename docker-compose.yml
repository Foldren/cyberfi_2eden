services:
  db:
    image: postgres:16.1-alpine3.18
    container_name: db
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PSW}
      POSTGRES_DB: ${PSQL_DB}
      TZ: Europe/Moscow
    ports:
      - 15432:5432
    networks:
      - 2eden_network
    volumes:
      - ./pgtune_init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./.backups/db:/var/lib/postgresql/data

  cache:
    image: redis/redis-stack-server
    container_name: cache
    restart: unless-stopped
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_CH_PSW} --loadmodule /opt/redis-stack/lib/redisearch.so --loadmodule /opt/redis-stack/lib/rejson.so
    ports:
      - 127.0.0.1:16379:6379
    networks:
      - 2eden_network
    volumes:
      - ./.backups/cache:/data

  api:
    build: api
    container_name: api
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - db
      - cache
      - index_db
    ports:
      - 127.0.0.1:18000:8000
    networks:
      - 2eden_network
    volumes:
      - ./api/src:/root/.project

  index_db:
    image: redis/redis-stack-server
    container_name: index_db
    restart: unless-stopped
    env_file:
      - ./.env
    command: redis-server --requirepass ${REDIS_I_PSW} --loadmodule /opt/redis-stack/lib/redisearch.so --loadmodule /opt/redis-stack/lib/rejson.so
    ports:
      - 127.0.0.1:26379:6379
    networks:
      - 2eden_network
    volumes:
      - ./.backups/index_db:/data

  bot:
    build: bot
    container_name: bot
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - api
    networks:
      - 2eden_network
    volumes:
      - ./bot/src:/root/.project

  tasks:
    build: tasks
    container_name: tasks
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - api
    networks:
      - 2eden_network
    tty: true  #todo убрать
    volumes:
      - ./tasks/src:/root/.project

  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    depends_on:
      - api
    ports:
      - 180:80
      - 1443:443
    networks:
      - 2eden_network
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./api/src/admin/statics:/home/admin_static

  #todo добавить frontend когда будет готов

networks:
  2eden_network: